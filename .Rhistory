for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = AllPrecip$Year>=1979 && AllPrecip$Year<=2018
year = AllPrecip$Year[idx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = AllPrecip$Year>=1979 & AllPrecip$Year<=2018
year = AllPrecip$Year[idx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
idx = AllPrecip$Year>=1978 & AllPrecip$Year<=2019
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = AllPrecip$Year>=1978 & AllPrecip$Year<=2019
year = AllPrecip$Year[idx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
idx = AllPrecip$Year>=1979 & AllPrecip$Year<=2019
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = AllPrecip$Year>=1979 & AllPrecip$Year<=2019
year = AllPrecip$Year[idx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
idx = AllPrecip$Year>=1975 & AllPrecip$Year<=2019
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = AllPrecip$Year>=1975 & AllPrecip$Year<=2019
year = AllPrecip$Year[idx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
year = AllPrecip$Year
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = AllPrecip[,"Year"]>=1979 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = AllPrecip[,"Year"]>=1979 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx3 = AllPrecip[,"Year"]>=1979 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idx3]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1979 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1930 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
idxx = AllPrecip[,"Year"]>=1970 & AllPrecip[,"Year"]<=2019
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1970 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1960 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1950 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1940 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1960 & AllPrecip[,"Year"]<=2019
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
x
shiny::runApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week10')
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1979 & AllPrecip[,"Year"]<=2018
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
summary(y1)
runApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week10')
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1979 & AllPrecip[,"Year"]<=2017
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
summary(y1)
library(car)
load("CanadianPrecip.Rdata")
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idxx = AllPrecip[,"Year"]>=1979 & AllPrecip[,"Year"]<=2016
year = AllPrecip$Year[idxx]
var = AllPrecip
#Average the Canadian climate data
minYr = min(year)
maxYr = max(year)
y1 = 0
x1 = 0
for(i in minYr:maxYr){
temp = as.numeric(AllPrecip[year==i,"Annual"])
y1[i] = mean(temp[!is.na(temp)])
x1[i] = i
}
y1 = y1[-(1)]
x1 = x1[-(1)]
scatter.smooth(x1,y1,main = "Mean of Precipitation in Canada by Year",
xlab = "Year",ylab="Precipitation")
summary(y1)
runApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week10')
year
var
min(yrIdx)
yrIdx = year>= input$yearRange[1] & year <= input$yearRange[2]
runApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week10')
runApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week10')
runApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week10')
Co2North
#LOAD 7 NECESSARY FILES
load("C02NorthernHemisphere.Rdata")
load("C02Worldwide.Rdata")
load("CanadianMeanTemp.Rdata")
load("CanadianAvgSnow.Rdata")
load("CanadianPrecip.Rdata")
load("CanadianMaxTemp.Rdata")
load("CanadianMinTemp.Rdata")
runApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week10')
load("C02Worldwide.Rdata")
#LOAD 7 NECESSARY FILES
load("C02NorthernHemisphere.Rdata")
getwd()
setwd("D:/1_YongKuk/1_SFU/2019/STAT240/Week10")
runApp()
Co2North$YearDecimal
Co2North
load("C02NorthernHemisphere.Rdata")
load("C02Worldwide.Rdata")
load("CanadianMeanTemp.Rdata")
load("CanadianAvgSnow.Rdata")
load("CanadianPrecip.Rdata")
load("CanadianMaxTemp.Rdata")
load("CanadianMinTemp.Rdata")
idx = MeanTemp == -9999.9
MeanTemp[idx] = NA
idx1 = AllSnow == -9999.9
AllSnow[idx1] = NA
idx2 = AllPrecip == -9999.9
AllPrecip[idx2] = NA
idx = MinTemp == -9999.9
MinTemp[idx] = NA
idx = MaxTemp == -9999.9
MaxTemp[idx] = NA
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='yongkukl', token='18F8D4D0D7D90AB464AEEF4A51D1C048', secret='lVWaqQQWOgO7cCVW6FVNssr/DMRWyFmt1kM2JwRw')
rsconnect::deployApp('D:/1_YongKuk/1_SFU/2019/STAT240/Week11')
shiny::runApp('part1')
runApp()
runApp('part1')
runApp('part1')
runApp('D:/1_YongKuk/1_SFU/2019/SPRING/STAT240/Week11')
tabPanel("About",
HTML("<h1>Yong Kuk Lee</h1>
<strong>About the Project</strong>
<p >This project is to find out if there is any correlation between the CO2 level and Canadian climate.<br>
<p name= 'data'>The following data will be used on this project:<br>
- Worldwide CO2 Level<br>
- Northern Hemisphere CO2 Level<br>
- Canadian Mean Temperature<br>
- Canadian Maximum Temperature<br>
- Canadian Minimum Temperature<br>
- Canadian Average Snowfall<br>
- Canadian Mean Precipitation<br>
</p>
<p>
This project is to observe if the increase in CO2 level will result in increasing temperature. The observation on
CO2 levels will be collected worldwide and from Northen Hemisphere regions. The comparing temperature will be based on
Canadian climate. Since Canada is a huge continent which could vary in the temperature by its province or city, the collected data
from each observatory will be averaged.
</p>
<strong>About Myself</strong>
<p>I'm a statistics student at SFU. I do not have LinkedIn yet, but I will make one as soon as I get more specs on the relating field.
I have accounts for Github, Twitter, and Facebook although I rarely use them.
The links will be provided below.
<br>
<em>(This field will be filled more with achievements I make in the future)</em>
</p>"
),#end of html part 1.
#Notice that I used double quotes (") above because otherwise it would interfere with
# the single quote in the word (don't)
HTML('
<div style="clear: left;">
<img src="http://farm8.staticflickr.com/7858/47498827012_06e2455f5a_b.jpg" alt="" style="height: 274px; width: 174px; "> </div>
<p>
Yong Kuk Lee<br>
Undergraduate of Statistics and Actuarial Science<br>
Simon Fraser University<br>
<a href="https://github.com/headec" target="_blank">Github</a><br>
<a href="https://twitter.com/Yong4006972" target="_blank">Twitter</a><br/>
<a href="https://www.facebook.com/supmanlol" target="_blank">Facebook</a><br>
</p>'),#End of html part 2
value="about"
runApp('D:/1_YongKuk/1_SFU/2019/SPRING/STAT240/Week11')
runApp('D:/1_YongKuk/1_SFU/2019/SPRING/STAT240/Week11')
runApp('D:/1_YongKuk/1_SFU/2019/SPRING/STAT240/Week11')
runApp('D:/1_YongKuk/1_SFU/2019/SPRING/STAT240/Week11')
runApp('D:/1_YongKuk/1_SFU/2019/SPRING/STAT240/Week11')
runApp('D:/1_YongKuk/1_SFU/2019/SPRING/STAT240/Week11')
